//
//  AuthenticationInteractor.swift
//  DGPPrivateData
//
//  Created by Daniel Gallego Peralta on 5/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import LocalAuthentication

protocol AuthenticationBusinessLogic {
    func doAuthentication(request: AuthenticationScene.Login.Request)
    var state: AuthenticationScene.AuthenticationState { get set }
}

protocol AuthenticationDataStore {
    var state: AuthenticationScene.AuthenticationState { get set }
}

class AuthenticationInteractor: AuthenticationBusinessLogic, AuthenticationDataStore {
    var presenter: AuthenticationPresentationLogic?
    var worker: AuthenticationWorker?
    var state: AuthenticationScene.AuthenticationState = .loggedOut
    
    // MARK: Do something
    
    func doAuthentication(request: AuthenticationScene.Login.Request) {
        worker = AuthenticationWorker()
        if state == .loggedOut {
            
            worker?.doAuthentication { [weak self] result in
                switch result {
                case .success(_):
                    self?.state = .loggenIn
                    self?.presenter?.presentLogin(response: AuthenticationScene.Login.Response())
                case .failure(let error):
                    self?.presenter?.presentError(error: error)
                }
            }
        }
    }
}
