//
//  ListEntryInteractor.swift
//  DGPPrivateData
//
//  Created by Daniel Gallego Peralta on 4/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListEntryBusinessLogic {
    func doLoadInitialData(request: ListEntryScene.Load.Request)
    func doFilterByText(request: ListEntryScene.FilterBy.Request)
}

protocol ListEntryDataStore {
    func setDependencies(preferencesService: PreferencesService, repositoryService: RepositoryService)
    var entries: [Entry] { get set }
}

class ListEntryInteractor: ListEntryBusinessLogic, ListEntryDataStore {
    var presenter: ListEntryPresentationLogic?
    
    var entries = [Entry]()
    
    var preferences: PreferencesService!
    var repositoryService: RepositoryService!
    var worker: ListEntryWorker!

    func setDependencies(preferencesService: PreferencesService, repositoryService: RepositoryService) {
        self.preferences = preferencesService
        self.repositoryService = repositoryService
        
        worker = ListEntryWorker(dataStore: preferencesService,
                                 masterDataSource: repositoryService)
    }
    
    // MARK: Do something
    
    func doLoadInitialData(request: ListEntryScene.Load.Request) {
        worker.fetchEntrys() { [weak self] entries in
            self?.entries = entries
            self?.callPresentResults()
        }
    }
    
    func doFilterByText(request: ListEntryScene.FilterBy.Request) {
        worker.fetchEntrys(textSearch: request.text) { [weak self] entries in
            self?.entries = entries
            self?.callPresentResults()
        }
    }
    
    private func callPresentResults() {
        let response = ListEntryScene.Load.Response(entrys: self.entries)
        self.presenter?.presentInitialData(response: response)
    }
}
