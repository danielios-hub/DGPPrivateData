//
//  PasswordGeneratorRouter.swift
//  DGPPrivateData
//
//  Created by Daniel Gallego Peralta on 8/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol PasswordGeneratorRoutingLogic {
    func routeToAddEditEntry()
}

protocol PasswordGeneratorDataPassing {
    var dataStore: PasswordGeneratorDataStore? { get }
}

class PasswordGeneratorRouter: NSObject, PasswordGeneratorRoutingLogic, PasswordGeneratorDataPassing {
    weak var viewController: PasswordGeneratorViewController?
    var dataStore: PasswordGeneratorDataStore?
    
    // MARK: Routing
    
    func routeToAddEditEntry() {
        let index = viewController!.navigationController!.viewControllers.count - 2
        let destinationVC = viewController!.navigationController!.viewControllers[index] as! AddEditEntryViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToAddEditEntry(source: dataStore!, destination: &destinationDS)
        navigateToAddEditEntry(source: viewController!, destination: destinationVC)
        
    }
    
    // MARK: Navigation
    
    func navigateToAddEditEntry(source: PasswordGeneratorViewController, destination: AddEditEntryViewController) {
        source.navigationController?.popViewController(animated: true)
    }
    
    //MARK: Passing data
    
    func passDataToAddEditEntry(source: PasswordGeneratorDataStore, destination: inout AddEditEntryDataStore) {
        destination.password = source.password
    }
}
